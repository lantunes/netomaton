import numpy as np

import netomaton as ntm
from .rule_test import *


class TestTurtle(RuleTest):

    def test_turtle_star(self):
        t = ntm.Turtle()

        # Turtle star
        while True:
            t.forward(200)
            t.rotate(-170)
            if t.abs < 1:
                break

        expected = [([0, 0.0], [0, 200.0]), ([0.0, -34.72963553338605], [200.0, 3.0384493975583666]),
                    ([-34.72963553338605, 33.67439313174766], [3.0384493975583666, 190.97697355474006]),
                    ([33.67439313174766, -66.3256068682523], [190.97697355474006, 17.771892797852303]),
                    ([-66.3256068682523, 62.2319150690555], [17.771892797852303, 170.98078142164795]),
                    ([62.2319150690555, -90.97697355474006], [170.98078142164795, 42.42325948434001]),
                    ([-90.97697355474006, 82.22810720214761], [42.42325948434001, 142.4232594843401]),
                    ([82.22810720214761, -105.71041695503402], [142.4232594843401, 74.01923081920624]),
                    ([-105.71041695503402, 91.25113364740756], [74.01923081920624, 108.74886635259244]),
                    ([91.25113364740756, -108.74886635259244], [108.74886635259244, 108.7488663525923]),
                    ([-108.74886635259244, 88.21268424984922], [108.7488663525923, 74.0192308192064]),
                    ([88.21268424984922, -99.7258399073325], [74.0192308192064, 142.42325948433998]),
                    ([-99.7258399073325, 73.47924084955534], [142.42325948433998, 42.42325948434015]),
                    ([73.47924084955534, -79.72964777424039], [42.42325948434015, 170.98078142164786]),
                    ([-79.72964777424039, 48.82787416306766], [170.98078142164786, 17.771892797852416]),
                    ([48.82787416306766, -51.172125836932565], [17.771892797852416, 190.97697355474003]),
                    ([-51.172125836932565, 17.231902828201427], [190.97697355474003, 3.0384493975584235]),
                    ([17.231902828201427, -17.497732705184916], [3.0384493975584235, 199.99999999999997]),
                    ([-17.497732705184916, -17.49773270518462], [199.99999999999997, -2.842170943040401e-14]),
                    ([-17.49773270518462, 17.23190282820114], [-2.842170943040401e-14, 196.96155060244163]),
                    ([17.23190282820114, -51.172125836932295], [196.96155060244163, 9.02302644525983]),
                    ([-51.172125836932295, 48.827874163067406], [9.02302644525983, 182.22810720214773]),
                    ([48.827874163067406, -79.72964777424016], [182.22810720214773, 29.019218578351882]),
                    ([-79.72964777424016, 73.47924084955613], [29.019218578351882, 157.57674051565894]),
                    ([73.47924084955613, -99.72583990733142], [157.57674051565894, 57.576740515658614]),
                    ([-99.72583990733142, 88.21268424985061], [57.576740515658614, 125.98076918079141]),
                    ([88.21268424985061, -108.74886635259094], [125.98076918079141, 91.25113364740493]),
                    ([-108.74886635259094, 91.25113364740906], [91.25113364740493, 91.25113364740395]),
                    ([91.25113364740906, -105.71041695503263], [91.25113364740395, 125.98076918078957]),
                    ([-105.71041695503263, 82.22810720214872], [125.98076918078957, 57.57674051565492]),
                    ([82.22810720214872, -90.97697355473926], [57.57674051565492, 157.57674051565448]),
                    ([-90.97697355473926, 62.23191506905573], [157.57674051565448, 29.019218578345885]),
                    ([62.23191506905573, -66.32560686825255], [29.019218578345885, 182.22810720214116]),
                    ([-66.32560686825255, 33.6743931317467], [182.22810720214116, 9.02302644525301]),
                    ([33.6743931317467, -34.729635533387565], [9.02302644525301, 196.9615506024345]),
                    ([-34.729635533387565, -2.3305801732931286e-12], [196.9615506024345, -7.247535904753022e-12])]

        np.testing.assert_almost_equal(expected, t.trajectory, decimal=14)
